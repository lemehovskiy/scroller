{"version":3,"file":"index.js","mappings":"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","sources":["webpack://Scroller/webpack/universalModuleDefinition","webpack://Scroller/webpack/bootstrap","webpack://Scroller/webpack/runtime/define property getters","webpack://Scroller/webpack/runtime/hasOwnProperty shorthand","webpack://Scroller/webpack/runtime/make namespace object","webpack://Scroller/../scroller-utils/dist/utils/getScrollTop.js","webpack://Scroller/../scroller-utils/dist/utils/getWindowHeight.js","webpack://Scroller/../scroller-utils/dist/utils/getBodyHeight.js","webpack://Scroller/../scroller-utils/dist/utils/getConvertItemUnitToPx.js","webpack://Scroller/../scroller-utils/dist/utils/getConvertedTriggersToPx.js","webpack://Scroller/../scroller-utils/dist/utils/getTriggers.js","webpack://Scroller/../scroller-utils/dist/utils/getAdjustedTriggerOffset.js","webpack://Scroller/../scroller-utils/dist/utils/getProgressLength.js","webpack://Scroller/../scroller-utils/dist/utils/getResizeValues.js","webpack://Scroller/../scroller-utils/dist/utils/getProgress.js","webpack://Scroller/./src/lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Scroller\"] = factory();\n\telse\n\t\troot[\"Scroller\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var getScrollTop = function () {\n  return document.body.scrollTop || document.documentElement.scrollTop;\n};\nexport default getScrollTop;\n","var getWindowSize = function () {\n  return window.innerHeight;\n};\nexport default getWindowSize;\n","var getBodySize = function () {\n  return document.body.clientHeight;\n};\nexport default getBodySize;\n","var getConvertItemUnitToPx = function (value, height) {\n  var valueWithoutSpaces = value.replace(/\\s/g, \"\");\n  var parsedValue = parseInt(valueWithoutSpaces, 10);\n  if (/px$/.test(valueWithoutSpaces)) {\n    return parsedValue;\n  }\n  if (/%|vh$/.test(valueWithoutSpaces)) {\n    return (height / 100) * parsedValue;\n  }\n  return parsedValue;\n};\nexport default getConvertItemUnitToPx;\n","import getConvertItemUnitToPx from \"./getConvertItemUnitToPx\";\nvar getConvertedTriggersToPx = function (triggers, height) {\n  var convertedTriggers = [];\n  triggers.forEach(function (trigger) {\n    var convetedValue = 0;\n    if (typeof trigger === \"string\") {\n      convetedValue = getConvertItemUnitToPx(trigger, height);\n    } else if (typeof trigger === \"number\") convetedValue = trigger;\n    convertedTriggers.push(convetedValue);\n  });\n  return convertedTriggers;\n};\nexport default getConvertedTriggersToPx;\n","import getConvertedTriggersToPx from \"./getConvertedTriggersToPx\";\nimport getAdjustedTriggerOffset from \"./getAdjustedTriggerOffset\";\nvar getTriggers = function (\n  scrollTriggerOffsetRaw,\n  scrollTop,\n  elementViewportOffsetTop,\n  elementHeight,\n  windowHeight,\n  bodyHeight,\n  autoAdjustScrollOffset\n) {\n  var elementOffsetTop = elementViewportOffsetTop + scrollTop;\n  var elementTriggerOffsetTop = elementOffsetTop;\n  var elementTriggerOffsetBottom = elementOffsetTop + elementHeight;\n  var _a = getConvertedTriggersToPx(\n      [scrollTriggerOffsetRaw.start, scrollTriggerOffsetRaw.end],\n      windowHeight\n    ),\n    scrollTriggerStartOffsetPx = _a[0],\n    scrollTriggerEndOffsetPx = _a[1];\n  var autoAdjustOffsetStart = 0;\n  var autoAdjustOffsetEnd = 0;\n  if (autoAdjustScrollOffset) {\n    var _b = getAdjustedTriggerOffset(\n        {\n          top: elementTriggerOffsetTop,\n          bottom: elementTriggerOffsetBottom,\n        },\n        windowHeight,\n        bodyHeight\n      ),\n      calculatedAutoAdjustOffsetStart = _b.startOffset,\n      calculatedAutoAdjustOffsetEnd = _b.endOffset;\n    autoAdjustOffsetStart = calculatedAutoAdjustOffsetStart;\n    autoAdjustOffsetEnd = calculatedAutoAdjustOffsetEnd;\n  }\n  return {\n    elementTriggerOffsetTop: elementTriggerOffsetTop,\n    elementTriggerOffsetBottom: elementTriggerOffsetBottom,\n    scrollTriggerOffsetStart:\n      scrollTriggerStartOffsetPx + autoAdjustOffsetStart,\n    scrollTriggerOffsetEnd: scrollTriggerEndOffsetPx + autoAdjustOffsetEnd,\n  };\n};\nexport default getTriggers;\n","export default function getAdjustedTriggerOffset(\n  elementOffset,\n  windowHeight,\n  documentHeight\n) {\n  var startOffset = 0;\n  var startOffsetSpace = elementOffset.top;\n  if (windowHeight > startOffsetSpace) {\n    startOffset = startOffsetSpace - windowHeight;\n  }\n  var endOffset = 0;\n  var endOffsetSpace = documentHeight - elementOffset.bottom;\n  if (windowHeight > endOffsetSpace) {\n    endOffset = windowHeight - endOffsetSpace;\n  }\n  return {\n    startOffset: startOffset,\n    endOffset: endOffset,\n  };\n}\n","var getProgressLength = function (\n  elementHeight,\n  windowHeight,\n  scrollTriggerStartOffset,\n  scrollTriggerEndOffset\n) {\n  return (\n    elementHeight +\n    windowHeight +\n    scrollTriggerStartOffset -\n    scrollTriggerEndOffset\n  );\n};\nexport default getProgressLength;\n","import getTriggers from \"./getTriggers\";\nimport getProgressLength from \"./getProgressLength\";\nvar getResizeValues = function (\n  scrollTop,\n  windowHeight,\n  bodyHeight,\n  elementViewportOffsetTop,\n  elementHeight,\n  scrollTriggerOffset,\n  autoAdjustScrollOffset\n) {\n  var _a = getTriggers(\n      scrollTriggerOffset,\n      scrollTop,\n      elementViewportOffsetTop,\n      elementHeight,\n      windowHeight,\n      bodyHeight,\n      autoAdjustScrollOffset\n    ),\n    elementTriggerOffsetTop = _a.elementTriggerOffsetTop,\n    elementTriggerOffsetBottom = _a.elementTriggerOffsetBottom,\n    scrollTriggerOffsetStart = _a.scrollTriggerOffsetStart,\n    scrollTriggerOffsetEnd = _a.scrollTriggerOffsetEnd;\n  var progressLength = getProgressLength(\n    elementHeight,\n    windowHeight,\n    scrollTriggerOffsetStart,\n    scrollTriggerOffsetEnd\n  );\n  return {\n    elementTriggerOffsetTop: elementTriggerOffsetTop,\n    elementTriggerOffsetBottom: elementTriggerOffsetBottom,\n    scrollTriggerOffsetStart: scrollTriggerOffsetStart,\n    scrollTriggerOffsetEnd: scrollTriggerOffsetEnd,\n    progressLength: progressLength,\n  };\n};\nexport default getResizeValues;\n","var getProgress = function (\n  scrollTop,\n  windowHeight,\n  scrollTriggerOffsetPxStart,\n  elementOffsetTop,\n  scrollLength\n) {\n  var scrollTriggerStart =\n    scrollTop + windowHeight + scrollTriggerOffsetPxStart;\n  var progress = (scrollTriggerStart - elementOffsetTop) / scrollLength;\n  if (progress > 1) progress = 1;\n  if (progress < 0) progress = 0;\n  var roundedProgress = Math.round(progress * 10000) / 10000;\n  return roundedProgress;\n};\nexport default getProgress;\n","import {\n  getResizeValues,\n  getWindowHeight,\n  getBodyHeight,\n  getScrollTop,\n  getProgress,\n} from \"@lemehovskiy/scroller-utils/dist\";\n\ninterface ILiteEvent<T> {\n  on(handler: { (data?: T): void }): void;\n  off(handler: { (data?: T): void }): void;\n}\n\nclass LiteEvent<T> implements ILiteEvent<T> {\n  private handlers: { (data?: T): void }[] = [];\n\n  public on(handler: { (data?: T): void }): void {\n    this.handlers.push(handler);\n  }\n\n  public off(handler: { (data?: T): void }): void {\n    this.handlers = this.handlers.filter((h) => h !== handler);\n  }\n\n  public trigger(data?: T) {\n    this.handlers.slice(0).forEach((h) => h(data));\n  }\n\n  public expose(): ILiteEvent<T> {\n    return this;\n  }\n}\n\nclass Scroller {\n  private element: HTMLElement;\n  private options: {\n    scrollTriggerOffset: {\n      start: number | string;\n      end: number | string;\n    };\n    autoAdjustScrollOffset: boolean;\n  };\n  private elementTriggerOffsetTop: number;\n  private elementTriggerOffsetBottom: number;\n  private scrollTriggerOffsetPxStart: number;\n  private scrollTriggerOffsetPxEnd: number;\n  private progressLength: number;\n  private progress: number;\n  private readonly onProgress = new LiteEvent<number>();\n\n  constructor(\n    element: HTMLElement,\n    options?: {\n      scrollTriggerOffset?: {\n        start: number | string;\n        end: number | string;\n      };\n      autoAdjustScrollOffset?: boolean;\n    }\n  ) {\n    this.element = element;\n    this.options = {\n      scrollTriggerOffset: { start: 0, end: 0 },\n      autoAdjustScrollOffset: false,\n      ...options,\n    };\n    this.init();\n  }\n\n  private init = (): void => {\n    this.subscribeLoad();\n  };\n\n  public get progressChanged() {\n    return this.onProgress.expose();\n  }\n\n  private onLoad = () => {\n    this.onResize();\n    this.onScroll();\n    this.subscribeResize();\n    this.subscribeScroll();\n  };\n\n  private onResize = () => {\n    const scrollTop = getScrollTop();\n    const windowHeight = getWindowHeight();\n    const bodyHeight = getBodyHeight();\n    const { y: elementViewportOffsetTop, height: elementHeight } =\n      this.element.getBoundingClientRect();\n\n    const {\n      elementTriggerOffsetTop,\n      elementTriggerOffsetBottom,\n      scrollTriggerOffsetStart,\n      scrollTriggerOffsetEnd,\n      progressLength,\n    } = getResizeValues(\n      scrollTop,\n      windowHeight,\n      bodyHeight,\n      elementViewportOffsetTop,\n      elementHeight,\n      this.options.scrollTriggerOffset,\n      this.options.autoAdjustScrollOffset\n    );\n\n    this.elementTriggerOffsetTop = elementTriggerOffsetTop;\n    this.elementTriggerOffsetBottom = elementTriggerOffsetBottom;\n    this.scrollTriggerOffsetPxStart = scrollTriggerOffsetStart;\n    this.scrollTriggerOffsetPxEnd = scrollTriggerOffsetEnd;\n    this.progressLength = progressLength;\n  };\n\n  private onScroll = () => {\n    const scrollTop = getScrollTop();\n    const windowHeight = getWindowHeight();\n    const progress = getProgress(\n      scrollTop,\n      windowHeight,\n      this.scrollTriggerOffsetPxStart,\n      this.elementTriggerOffsetTop,\n      this.progressLength\n    );\n\n    this.progress = progress;\n    this.onProgress.trigger(progress);\n  };\n\n  private subscribeLoad = (): void => {\n    window.addEventListener(\"load\", this.onLoad);\n  };\n\n  private subscribeScroll = (): void => {\n    window.addEventListener(\"scroll\", this.onScroll);\n  };\n\n  private subscribeResize = (): void => {\n    window.addEventListener(\"resize\", this.onResize);\n  };\n}\n\nexport default Scroller;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","document","body","scrollTop","documentElement","window","innerHeight","clientHeight","height","valueWithoutSpaces","replace","parsedValue","parseInt","test","triggers","convertedTriggers","forEach","trigger","convetedValue","getConvertItemUnitToPx","push","scrollTriggerOffsetRaw","elementViewportOffsetTop","elementHeight","windowHeight","bodyHeight","autoAdjustScrollOffset","elementOffsetTop","elementTriggerOffsetTop","elementTriggerOffsetBottom","_a","getConvertedTriggersToPx","start","end","scrollTriggerStartOffsetPx","scrollTriggerEndOffsetPx","autoAdjustOffsetStart","autoAdjustOffsetEnd","_b","elementOffset","documentHeight","startOffset","startOffsetSpace","top","endOffset","endOffsetSpace","bottom","getAdjustedTriggerOffset","scrollTriggerOffsetStart","scrollTriggerOffsetEnd","scrollTriggerStartOffset","scrollTriggerEndOffset","scrollTriggerOffset","getTriggers","progressLength","getProgressLength","scrollTriggerOffsetPxStart","scrollLength","progress","Math","round","LiteEvent","handler","this","handlers","filter","h","data","slice","Scroller","element","options","subscribeLoad","onResize","onScroll","subscribeResize","subscribeScroll","getScrollTop","getWindowHeight","getBodyHeight","getBoundingClientRect","y","getResizeValues","scrollTriggerOffsetPxEnd","getProgress","onProgress","addEventListener","onLoad","init","expose"],"sourceRoot":""}